name: CI Tests

on:
  push:
  pull_request:

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: ['3.9', '3.10', '3.11']

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install UV
      uses: astral-sh/setup-uv@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Get UV cache dir
      id: uv-cache-dir
      shell: bash
      run: echo "dir=$(uv cache dir)" >> $GITHUB_OUTPUT
    
    - name: Cache UV packages
      uses: actions/cache@v4
      with:
        path: ${{ steps.uv-cache-dir.outputs.dir }}
        key: ${{ runner.os }}-uv-${{ hashFiles('pyproject.toml') }}
        restore-keys: |
          ${{ runner.os }}-uv-
    
    - name: Install dependencies
      run: |
        uv pip install -e ".[dev]"
    
    - name: Run tests with coverage
      run: |
        uv run pytest --cov=gpt2_arc --cov-report=xml
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.xml
        flags: unittests
        fail_ci_if_error: true